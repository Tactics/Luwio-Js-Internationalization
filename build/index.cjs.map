{"version":3,"sources":["../src/domain/index.tsx","../src/logger.ts","../src/context/internationalization-context.tsx","../src/hooks/use-internationalization.ts","../src/context/language-detection-context.tsx","../src/hooks/use-language-detection.ts"],"names":["jsx","I18nProvider","Logger","createContext","I18n","useContext"],"mappings":"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","file":"index.cjs","sourcesContent":["import {\n  InternationalizationConfigI,\n  LuwioInternationalizationI,\n} from \"@/contracts\";\nimport React, { PropsWithChildren } from \"react\";\nimport { I18n } from \"@lingui/core\";\nimport { I18nProvider } from \"@lingui/react\";\nimport { ILogger } from \"js-logger\";\n\nexport class LuwioInternationalization implements LuwioInternationalizationI {\n  private readonly _internationalization: I18n;\n  private readonly _load: (language: string) => Promise<Record<string, string>>;\n  private readonly _logger: ILogger;\n\n  constructor(config: InternationalizationConfigI, logger: ILogger) {\n    this._logger = logger;\n    this._internationalization = config.i18n;\n    this._load = config.load;\n\n    this.change(config.initialLanguage);\n  }\n\n  private load = async (language: string) => {\n    return await this._load(language);\n  };\n\n  current() {\n    return this._internationalization.locale;\n  }\n\n  change(language: string) {\n    this._logger.info(`Changing language to ${language}`);\n\n    // Check if the language is already loaded\n    if (this.current() === language) {\n      this._logger.info(`Language is already ${language}`);\n      return;\n    }\n\n    this.load(language)\n      .then((messages) => {\n        this._logger.info(`Changing language to ${language}`);\n        this._logger.info(messages);\n\n        this._internationalization.load(language, messages);\n        this._internationalization.activate(language);\n      })\n      .catch((error) => {\n        this._logger.error(`Failed to change language to ${language}`);\n        this._logger.error(error);\n      });\n  }\n\n  t(key: string, variables?: Record<string, unknown>) {\n    return this._internationalization._(key, variables);\n  }\n\n  tdate(value: Date, format?: Intl.DateTimeFormatOptions) {\n    return this._internationalization.date(value, format);\n  }\n\n  tnumber(value: number, format?: Intl.DateTimeFormatOptions) {\n    return this._internationalization.number(value, format);\n  }\n\n  getProvider({ children }: PropsWithChildren): React.JSX.Element {\n    return (\n      <I18nProvider i18n={this._internationalization}>{children}</I18nProvider>\n    );\n  }\n}\n","import Logger from \"js-logger\";\n\nLogger.useDefaults({\n  defaultLevel: Logger.TRACE,\n  formatter: function (messages, context) {\n    // prefix each log message with a timestamp and the module name.\n    messages.unshift(new Date().toUTCString());\n    messages.unshift(\"Internationalization\");\n  },\n});\n\nexport const InternationalizationLogger = Logger.get(\"Internationalization\");\nInternationalizationLogger.setLevel(Logger.OFF);\n\nexport function enableInternationalizationLogger() {\n  InternationalizationLogger.setLevel(Logger.TRACE);\n}\n","import { I18n } from \"@lingui/core\";\nimport React, { createContext, FC, PropsWithChildren, useMemo } from \"react\";\nimport { LuwioInternationalizationI } from \"@/contracts\";\nimport { LuwioInternationalization } from \"@/domain\";\nimport { InternationalizationLogger } from \"@/logger\";\n\n// Context to provide the internationalization object\nexport const InternationalizationContext = createContext<\n  LuwioInternationalizationI | undefined\n>(undefined);\n\nexport interface InternationalizationProps extends PropsWithChildren {\n  initialLanguage: string;\n  loadMessages: (language: string) => Promise<Record<string, string>>;\n}\n\nexport const InternationalizationProvider: FC<InternationalizationProps> = (\n  props: InternationalizationProps,\n) => {\n  const { children, initialLanguage, loadMessages } = props;\n\n  const i18n = new I18n({\n    missing: (locale, key) => {\n      return `MISSING TRANSLATION: ${key} in ${locale}`;\n    },\n  });\n\n  // Create Internationalization instance\n  const Internationalization = new LuwioInternationalization(\n    {\n      i18n: i18n,\n      load: loadMessages,\n      initialLanguage: initialLanguage,\n    },\n    InternationalizationLogger,\n  );\n\n  // Provide the context and the children\n  return (\n    <InternationalizationContext.Provider value={Internationalization}>\n      {Internationalization.getProvider({ children })}\n    </InternationalizationContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { InternationalizationContext } from \"@/context/internationalization-context\";\nimport { LuwioInternationalizationI } from \"@/contracts\";\n\nexport const useInternationalization = (): LuwioInternationalizationI => {\n  const context = useContext(InternationalizationContext);\n  if (!context) {\n    throw new Error(\n      \"useInternationalization must be used within a InternationalizationProvider\",\n    );\n  }\n  return context;\n};\n","import { createContext, FC, PropsWithChildren } from \"react\";\nimport { InternationalizationLogger } from \"@/logger\";\n\nexport interface LanguageDetectionContextType {\n  detectedLanguage: string;\n}\n\nexport const LanguageDetectionDefault = {\n  detectedLanguage: \"en\",\n};\n\nexport const LanguageDetectionContext =\n  createContext<LanguageDetectionContextType>(LanguageDetectionDefault);\n\nexport interface LanguageDetectionProviderProps extends PropsWithChildren {\n  detectLanguage: (fallback: string) => string;\n  fallbackLanguage: string;\n}\n\nexport const LanguageDetectionProvider: FC<LanguageDetectionProviderProps> = (\n  props: LanguageDetectionProviderProps,\n) => {\n  const { children, fallbackLanguage, detectLanguage } = props;\n\n  return (\n    <LanguageDetectionContext.Provider\n      value={{\n        detectedLanguage: detectLanguage(fallbackLanguage),\n      }}\n    >\n      {children}\n    </LanguageDetectionContext.Provider>\n  );\n};\n\nexport const detectLanguageFromUrl = (fallback: string): string => {\n  const url = new URL(window.location.href);\n  const pathname = url.pathname;\n\n  const code = pathname.split(\"/\")[1];\n\n  if (code.length !== 2) {\n    InternationalizationLogger.warn(\n      `Invalid length of language code detected from url: ${code}`,\n    );\n    InternationalizationLogger.info(\n      `fallback detected language to ${fallback}`,\n    );\n    return fallback;\n  }\n\n  if (!/^[a-zA-Z]{2}$/.test(code)) {\n    InternationalizationLogger.warn(\n      `Invalid language code detected from url: ${code}`,\n    );\n    InternationalizationLogger.info(\n      `fallback detected language to ${fallback}`,\n    );\n    return fallback;\n  }\n\n  if (code.toLowerCase() !== code) {\n    InternationalizationLogger.warn(\n      `Invalid language code containing uppercase values detected from url: ${code}`,\n    );\n    InternationalizationLogger.info(\n      `fallback detected language to ${fallback}`,\n    );\n    return fallback;\n  }\n\n  return code;\n};\n","import { useContext } from \"react\";\nimport { LanguageDetectionContext } from \"@/context/language-detection-context\";\n\nexport const useLanguageDetection = (): string => {\n  const context = useContext(LanguageDetectionContext);\n  return context.detectedLanguage;\n};\n"]}