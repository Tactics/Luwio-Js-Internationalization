{"version":3,"sources":["../src/domain/index.tsx","../src/context/internationalization-context.tsx","../src/hooks/use-translate.ts","../src/hooks/use-language.ts","../src/hooks/use-internationalization.ts"],"names":["jsx","useContext"],"mappings":"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","file":"index.js","sourcesContent":["import {\n  InternationalizationConfigI,\n  LuwioInternationalizationI,\n} from \"@/contracts\";\nimport React, { PropsWithChildren } from \"react\";\nimport { I18n } from \"@lingui/core\";\nimport { I18nProvider } from \"@lingui/react\";\n\nexport class LuwioInternationalization implements LuwioInternationalizationI {\n  private readonly _internationalization: I18n;\n  private readonly _load: (language: string) => Promise<Record<string, string>>;\n\n  constructor(config: InternationalizationConfigI) {\n    this._internationalization = config.i18n;\n    this._load = config.load;\n    this.change(config.initialLanguage);\n  }\n\n  private load = async (language: string) => {\n    return await this._load(language);\n  };\n\n  current() {\n    return this._internationalization.locale;\n  }\n\n  change(language: string) {\n    console.log(`Changing language to ${language}`);\n\n    this.load(language)\n      .then((messages) => {\n        console.log(`Loaded messages for ${language}:`, messages);\n        this._internationalization.load(language, messages);\n        this._internationalization.activate(language);\n      })\n      .catch((error) => {\n        console.error(`Failed to change language to ${language}:`, error);\n      });\n  }\n\n  t(key: string) {\n    return this._internationalization._(key);\n  }\n\n  tdate(value: Date, format?: Intl.DateTimeFormatOptions) {\n    return this._internationalization.date(value, format);\n  }\n\n  tnumber(value: number, format?: Intl.DateTimeFormatOptions) {\n    return this._internationalization.number(value, format);\n  }\n\n  getProvider({ children }: PropsWithChildren): React.JSX.Element {\n    return (\n      <I18nProvider i18n={this._internationalization}>{children}</I18nProvider>\n    );\n  }\n}\n","import { i18n } from \"@lingui/core\";\nimport React, { createContext, FC, PropsWithChildren, useMemo } from \"react\";\nimport { LuwioInternationalizationI } from \"@/contracts\";\nimport { LuwioInternationalization } from \"@/domain\";\n\n// Context to provide the internationalization object\nexport const InternationalizationContext = createContext<\n  LuwioInternationalizationI | undefined\n>(undefined);\n\nexport interface InternationalizationProps extends PropsWithChildren {\n  initialLanguage: string;\n  loadMessages: (language: string) => Promise<Record<string, string>>;\n}\n\nexport const InternationalizationProvider: FC<InternationalizationProps> = (\n  props: InternationalizationProps,\n) => {\n  const { children, initialLanguage, loadMessages } = props;\n\n  // Create Internationalization instance\n  const Internationalization = useMemo(() => {\n    return new LuwioInternationalization({\n      i18n: i18n,\n      load: loadMessages,\n      initialLanguage: initialLanguage,\n    });\n  }, [loadMessages]);\n\n  console.log(Internationalization);\n\n  // Provide the context and the children\n  return (\n    <InternationalizationContext.Provider value={Internationalization}>\n      {Internationalization.getProvider({ children })}\n    </InternationalizationContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { InternationalizationContext } from \"@/context/internationalization-context\";\n\nexport const useTranslate = (): ((key: string) => string) => {\n  const context = useContext(InternationalizationContext);\n  if (!context) {\n    throw new Error(\n      \"useTranslate must be used within a InternationalizationProvider\",\n    );\n  }\n  return context.t;\n};\n","import { useContext } from \"react\";\nimport { InternationalizationContext } from \"@/context/internationalization-context\";\n\nexport const useLanguage = (): string => {\n  const context = useContext(InternationalizationContext);\n  if (!context) {\n    throw new Error(\n      \"useTranslate must be used within a InternationalizationProvider\",\n    );\n  }\n  return context.current();\n};\n","import { useContext } from \"react\";\nimport { InternationalizationContext } from \"@/context/internationalization-context\";\nimport { LuwioInternationalizationI } from \"@/contracts\";\n\nexport const useInternationalization = (): LuwioInternationalizationI => {\n  const context = useContext(InternationalizationContext);\n  if (!context) {\n    throw new Error(\n      \"useInternationalization must be used within a InternationalizationProvider\",\n    );\n  }\n  return context;\n};\n"]}